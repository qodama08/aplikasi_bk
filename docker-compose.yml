services:
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-php
    volumes:
      - .:/var/www
    command: >
      bash -c "
        chown -R www-data:www-data storage bootstrap/cache &&
        chmod -R 775 storage bootstrap/cache &&
        if [ ! -f .env ]; then cp .env.example .env; fi &&
        composer install --no-interaction --prefer-dist &&
        php artisan key:generate --force &&
        php artisan migrate --seed --force || true &&
        php-fpm"
    networks:
      - laravel

  nginx:
    image: nginx:1.25
    container_name: laravel-nginx
    ports:
      - "8080:80"
    volumes:
      - .:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - laravel

  mysql:
    image: mysql:8.0
    container_name: laravel-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: laravel
      MYSQL_USER: laravel
      MYSQL_PASSWORD: laravel
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - laravel

  node:
    image: node:20
    container_name: laravel-node
    working_dir: /var/www
    volumes:
      - .:/var/www
    command: bash -c "npm install && npm run build"
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: laravel-phpmyadmin
    restart: unless-stopped
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: laravel
      PMA_PASSWORD: laravel
    depends_on:
      - mysql
    networks:
      - laravel

networks:
  laravel:
    driver: bridge

volumes:
  db_data:
